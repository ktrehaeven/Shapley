#credit to the omstimelation repo: https://github.com/o-smirnov/omstimelation
cabs:
  DDFacet:
    backend:
      select:
        native
      native:
        virtual_env: ~/ddfenv3.6/
    command: DDF.py
    policies:
      prefix: '--'
      explicit_true: 1
      explicit_false: 0
      replace:
        '.': '-'
    inputs:
      _include: /home/trehaeven/software/DDFacet/DDFacet/Parset/ddfacet_stimela_inputs_schema.yaml
      parset:
        dtype: File
        required: false
        info: "Name of parset to load parameters from (default is to start with global default settings.)"
        policies:
          positional_head: true

    outputs:
      dirty_mfs: 
        dtype: File
        must_exist: false
        implicit: '{current.Output.Name}.dirty.fits' 
      dirty_corr_mfs: 
        dtype: File
        must_exist: false
        implicit: '{current.Output.Name}.dirty.corr.fits' 
      app_restored_mfs: 
        dtype: File
        must_exist: false
        implicit: '{current.Output.Name}.app.restored.fits'
      app_model:
        dtype: File
        must_exist: false
        implicit: '{current.Output.Name}.app.model.fits'
      skymodel:
        dtype: File
        must_exist: false
        implicit: '{current.Output.Name}.DicoModel'

  killMS:
    backend:
      select:
        native
      native:
        virtual_env: ~/ddfenv3.6/
    command: kMS.py
    policies:
      prefix: '--'
      explicit_true: true
      explicit_false: true
    inputs:
      _include: /home/trehaeven/software/killMS/killMS/Parset/killms_stimela_schema.yaml
      parset:
        dtype: File
        required: false
        info: "Name of parset to load parameters from (default is to start with global default settings.)"
        policies:
          positional_head: true
      
  ddf_makemodel:
    backend:
      select:
        native
      native:
        virtual_env: ~/ddfenv3.6/
    command: MakeModel.py
    inputs:
      ds9PreClusterFile:
        dtype: File
        required: true
      BaseImageName:
        dtype: str
        required: true
      NCluster:
        dtype: int
        default: 0
    outputs:
      ClusterCat:
        implicit: '{current.ds9PreClusterFile}.ClusterCat.npy'
#-----------------------------------------------------------------------------------------------
  flagsummary:
    command: flagdata
    flavour: casa-task
    inputs:
      vis:
        dtype: MS
        required: true
        nom_de_guerre: vis
      spw:
        dtype: str
        default: ''
      mode:
        implicit: 'summary'
    outputs:
      percentage:
        dtype: float
    management:
      wranglers:
        'Total Flagged: .* Total Counts: .* \((?P<percentage>[\d.]+)%\)':
          - PARSE_OUTPUT:percentage:float
          - HIGHLIGHT:bold green

  flagman:
    command: flagmanager
    flavour: casa-task
    inputs:
      vis:
        dtype: MS
        required: true
        nom_de_guerre: vis
      versionname:
        info: "flag version name"
      mode:
        choices: [save, restore, list]
        required: true

  sumcol:
    flavour: python
    command: MSUtils.msutils.sumcols
    inputs:
      msname:
        dtype: MS
        required: true
      col1:
        dtype: str
        required: true
      col2:
        dtype: str
        required: true
      outcol:
        dtype: str
        required: true
      subtract:
        dtype: bool
        default: false

  copycol:
    flavour: python
    command: MSUtils.msutils.copycol
    inputs:
      msname:
        dtype: MS
        required: true
      fromcol:
        dtype: str
        required: true
      tocol:
        dtype: str
        required: true
